
/*!
leaflet.travelnotesopenrouteservice - version 1.6.0 
build 00054 - 2019-12-09T22:10:38+0100 
Copyright 2017 2019 wwwouaiebe 
Contact: http://www.ouaie.be/
Sources: https://github.com/wwwouaiebe/leaflet.TravelNotesOpenRouteService 
License: GPL-3.0
*/


var polyline={};function py2_round(e){return Math.floor(Math.abs(e)+.5)*(e>=0?1:-1)}function encode(e,t,r){var n=(e=py2_round(e*r))-(t=py2_round(t*r));n<<=1,e-t<0&&(n=~n);for(var o="";n>=32;)o+=String.fromCharCode(63+(32|31&n)),n>>=5;return o+=String.fromCharCode(n+63)}function flipped(e){for(var t=[],r=0;r<e.length;r++)t.push(e[r].slice().reverse());return t}function newHttpRequestBuilder(){const e=4,t=200,r=15e3;return{postJsonPromise:(n,o,i)=>(n=n,o=o,i=i,new Promise(function(a,u){let s=new XMLHttpRequest;s.timeout=r,s.onreadystatechange=function(){if(e===s.readyState)if(t===s.status){let e=null;try{e=JSON.parse(s.responseText),a(e)}catch(e){u(e)}}else u(new Error("Error XMLHttpRequest - File : "+s.responseURL))},s.open("POST",n,!0),o&&o.forEach(e=>s.setRequestHeader(e.headerName,e.headerValue)),s.overrideMimeType("application/json"),s.send(i)}))};var n,o,i}function newOpenRouteServiceRouteProvider(){const e=0,t=1,r=5,n=6;let o="",i="fr",a=null;function u(u,s){newHttpRequestBuilder().postJsonPromise(function(){let e="https://api.openrouteservice.org/v2/directions/";switch(a.itinerary.transitMode){case"car":e+="driving-car";break;case"bike":e+="cycling-tour";break;case"pedestrian":e+="foot-walking";break;default:return void console.log("invalid transitMode")}return e}(),[{headerName:"Accept",headerValue:"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8"},{headerName:"Content-Type",headerValue:"application/json"},{headerName:"Authorization",headerValue:o}],function(){let e=null;return a.wayPoints.forEach(t=>{e=e?e+",":'{"coordinates":[',e+="["+t.lng.toFixed(n)+","+t.lat.toFixed(n)+"]"}),e+='],"language":"'+i+'"}'}()).then(n=>(function(n,o,i){n.routes&&e!==n.routes.length||i(new Error("Route not found")),n.routes[e].geometry=polyline.decode(n.routes[e].geometry,r),a.itinerary.itineraryPoints.removeAll(),a.itinerary.maneuvers.removeAll();let u=["kTurnLeft","kTurnRight","kTurnSharpLeft","kTurnSharpRight","kTurnSlightLeft","kTurnSlightRight","kContinueStraight","kRoundaboutRight","kRoundaboutExit","kUturnLeft","kArriveDefault","kDepartDefault","kStayLeft","kStayRight"],s=e,l=window.L.travelNotes.itineraryPoint;l.latLng=n.routes[e].geometry[s],a.itinerary.itineraryPoints.add(l),s++,n.routes[e].segments.forEach(function(r){r.steps.forEach(function(r){let o=window.L.travelNotes.maneuver;for(o.iconName=u[r.type]||"kUndefined",o.instruction=r.instruction,o.duration=r.duration,o.distance=r.distance,o.itineraryPointObjId=a.itinerary.itineraryPoints.last.objId,a.itinerary.maneuvers.add(o);s<=r.way_points[t];)(l=window.L.travelNotes.itineraryPoint).latLng=n.routes[e].geometry[s],a.itinerary.itineraryPoints.add(l),s++})});let d=a.wayPoints.iterator;n.routes[e].way_points.forEach(function(t){d.done||(d.value.latLng=n.routes[e].geometry[t])}),o(a)})(n,u,s)).catch(e=>s(e))}return{getPromiseRoute:e=>(e=e,a=e,new Promise(u)),get icon(){return"iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABmJLR0QAzwBfAF8OMuGdAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAA\t\t\t\tB3RJTUUH4QoBEgIhgj0YgQAAAmdJREFUSMftlk9LYlEYxn+WinqdaWga0owaa9RWFS2iTZt27YJu5K4bFNSqFkFEcaHvUNAmUjdC\t\t\t\tGdQHqE8QGVGRY1BpOZEFGepo+WcW43WySWYZAz6rc5/3HH7nfR84XJV/ZCTPO6iKd1IFXAFXwP8/WP3a0FutmEURQ2sr5PMkgkEi\t\t\t\t6+ukr64A6HS5SvZnUilSoRBht5v09TVVgoDF6eRDeztqg4FMPE48EODH5ibP0ejbHWvq6vg2O4umpobvskxAltHW1mKbn0drMpUA\t\t\t\tDyQJvyRxubKC0W6naWwMgObxcT739nK5vMzhxARXHg+1PT20TE2VH7VZFKnW6Yj4fDzd3vIcjRLx+VDr9ZgGBv4alwqIn5wAoLNY\t\t\t\tADC2tQEg2O3kczke/X4OJInAwkJ5sHIoeXZW9JS1UnupvErFx44OAH5eXPzef34OQIMo4lhcRHA4/p2x2mgEIJtMFj1lrdQUvcz6\t\t\t\t8fiYcOE7tLpKy/Q0+sZGDE1N2ObmeNjfJ+x2k43F3u5YgVQLQtGrLgAziUQJ2D86yvnSErlMhiqNhszDAwDPd3cEZJmwx8NTwfvU\t\t\t\t1cXXycnyo44HAsV8FAk2GwCJ09PSfPN5Ynt7XHu9GO12zENDf4q5HPe7u5zMzBDx+QAwWK3lwTdbW2TTacyiiNZkQltfj3lwkEwq\t\t\t\txc329ptZ3e/skAyHqevrQ2syYZNlOl0uarq7IZcrZq40Vbz46z8QXXMzDaKIodBpMhgksrFBKhQqyfZAkopnvvT3YxkeJnZ4SHht\t\t\t\tDYvTieBwoBYEsskkj0dHRLxesvF4eXDlra6AK+AKuAIup1+E4uxBnFG6zQAAAABJRU5ErkJggg=="},get name(){return"OpenRouteService"},get transitModes(){return{car:!0,bike:!1,pedestrian:!0,train:!1}},get providerKeyNeeded(){return!0},get providerKey(){return o.length},set providerKey(e){o=e},get userLanguage(){return i},set userLanguage(e){i=e}};var s}polyline.decode=function(e,t){for(var r,n=0,o=0,i=0,a=[],u=0,s=0,l=null,d=Math.pow(10,Number.isInteger(t)?t:5);n<e.length;){l=null,u=0,s=0;do{s|=(31&(l=e.charCodeAt(n++)-63))<<u,u+=5}while(l>=32);r=1&s?~(s>>1):s>>1,u=s=0;do{s|=(31&(l=e.charCodeAt(n++)-63))<<u,u+=5}while(l>=32);o+=r,i+=1&s?~(s>>1):s>>1,a.push([o/d,i/d])}return a},polyline.encode=function(e,t){if(!e.length)return"";for(var r=Math.pow(10,Number.isInteger(t)?t:5),n=encode(e[0][0],0,r)+encode(e[0][1],0,r),o=1;o<e.length;o++){var i=e[o],a=e[o-1];n+=encode(i[0],a[0],r),n+=encode(i[1],a[1],r)}return n},polyline.fromGeoJSON=function(e,t){if(e&&"Feature"===e.type&&(e=e.geometry),!e||"LineString"!==e.type)throw new Error("Input must be a GeoJSON LineString");return polyline.encode(flipped(e.coordinates),t)},polyline.toGeoJSON=function(e,t){return{type:"LineString",coordinates:flipped(polyline.decode(e,t))}},"object"==typeof module&&module.exports&&(module.exports=polyline),window.L.travelNotes.addProvider(newOpenRouteServiceRouteProvider());